image: heptacom/heptaconnect-pipeline:php74-7.0.0

definitions:
    partials:
        -   step: &php80-image
                image: heptacom/heptaconnect-pipeline:php80-7.0.0
        -   step: &php81-image
                image: heptacom/heptaconnect-pipeline:php81-7.0.0
    services:
        shopware-6-4-0: &shopware-6-service
            image: dockware/play:6.4.0.0
            variables:
                APP_URL: http://127.0.0.1:80/
        shopware-6-4-5:
            <<: *shopware-6-service
            image: dockware/play:6.4.5.0
        shopware-6-4-10:
            <<: *shopware-6-service
            image: dockware/play:6.4.10.0
        shopware-6-4-15:
            <<: *shopware-6-service
            image: dockware/play:6.4.15.0
        shopware-6-4-20:
            <<: *shopware-6-service
            image: dockware/play:6.4.20.0
        shopware-6-5-0:
            <<: *shopware-6-service
            image: dockware/play:6.5.0.0
    steps:
        -   step: &default-step
                caches:
                    - composer
                after-script:
                    - cp -a .build test-results
                    - find test-results -type f -name '*.xml' -exec sed -i .bak -e "s|`pwd`/||" {} +
                    - 'test ${BITBUCKET_EXIT_CODE} -eq 0 || composer config --list'
        -   step: &github-keyword-gate-step
                <<: *default-step
                name: Github Keyword Gate
                script:
                    - 'test $(git --no-pager log --full-history "--grep=${GITHUB_GREP_DENY_PATTERN}" | wc -l) -eq 0'
                    - 'test $(git --no-pager log --full-history -S "${GITHUB_GREP_DENY_PATTERN}" --pickaxe-all --pickaxe-regex --oneline | wc -l) -eq 0'
                after-script:
                    - 'test ${BITBUCKET_EXIT_CODE} -eq 0 || git --no-pager log --full-history "--grep=${GITHUB_GREP_DENY_PATTERN}"'
                    - 'test ${BITBUCKET_EXIT_CODE} -eq 0 || git --no-pager log --full-history -S "${GITHUB_GREP_DENY_PATTERN}" --pickaxe-all --pickaxe-regex --oneline'
        -   step: &github-mirror-branch
                <<: *default-step
                name: Mirror to Github
                script:
                    - git fetch --unshallow origin
                    - git remote add github "git@github.com:HEPTACOM/${BITBUCKET_REPO_SLUG}.git"
                    - git push --force github ${BITBUCKET_BRANCH}
        -   step: &github-mirror-tag
                <<: *default-step
                name: Mirror tags to Github
                script:
                    - git remote add github "git@github.com:HEPTACOM/${BITBUCKET_REPO_SLUG}.git"
                    - git push --force github tag $BITBUCKET_TAG
        -   step: &composer-high-install
                <<: *default-step
                name: Install (High dependencies)
                artifacts:
                    - .build/**
                    - composer.lock
                    - setup-vendor.sh
                script:
                    - make clean
                    - GLOBAL_REPOSITORIES_DIR=`pwd`/.build/private-composer composer-repository
                    - COMPOSER_EXTRA_ARGS=-vvv make -e vendor
                    - make .build
                    - mv vendor .build/vendor-high
                    - echo 'mkdir -p vendor; rm -rf vendor; mv .build/vendor-high vendor' > setup-vendor.sh
        -   step: &composer-low-install
                <<: *default-step
                name: Install (Low dependencies)
                artifacts:
                    - .build/**
                    - composer.lock
                    - setup-vendor.sh
                script:
                    - make clean
                    - GLOBAL_REPOSITORIES_DIR=`pwd`/.build/private-composer composer-repository
                    - composer update --prefer-lowest --prefer-stable
                    - COMPOSER_EXTRA_ARGS=-vvv make -e vendor
                    - make .build
                    - mv vendor .build/vendor-low
                    - echo 'mkdir -p vendor; rm -rf vendor; mv .build/vendor-low vendor' > setup-vendor.sh
        -   step: &test-unit-high-install-80
                <<: *php80-image
                name: Install and Unit test (8.0 + High dependencies)
                services:
                    - shopware-6-4-20
                script:
                    - make clean
                    - GLOBAL_REPOSITORIES_DIR=`pwd`/.build/private-composer composer-repository
                    - . ./bitbucket-pipelines.env
                    - COMPOSER_EXTRA_ARGS=-vvv make -e test
        -   step: &test-unit-low-install-80
                <<: *php80-image
                name: Install and Unit test (8.0 + Low dependencies)
                services:
                    - shopware-6-4-20
                script:
                    - make clean
                    - GLOBAL_REPOSITORIES_DIR=`pwd`/.build/private-composer composer-repository
                    - composer update --prefer-lowest --prefer-stable
                    - . ./bitbucket-pipelines.env
                    - COMPOSER_EXTRA_ARGS=-vvv make -e test
        -   step: &test-unit-high-install-81
                <<: *php81-image
                name: Install and Unit test (8.1 + High dependencies)
                services:
                    - shopware-6-4-20
                script:
                    - make clean
                    - GLOBAL_REPOSITORIES_DIR=`pwd`/.build/private-composer composer-repository
                    - . ./bitbucket-pipelines.env
                    - COMPOSER_EXTRA_ARGS=-vvv make -e test
        -   step: &test-unit-low-install-81
                <<: *php81-image
                name: Install and Unit test (8.1 + Low dependencies)
                services:
                    - shopware-6-4-20
                script:
                    - make clean
                    - GLOBAL_REPOSITORIES_DIR=`pwd`/.build/private-composer composer-repository
                    - composer update --prefer-lowest --prefer-stable
                    - . ./bitbucket-pipelines.env
                    - COMPOSER_EXTRA_ARGS=-vvv make -e test
        -   step: &test-coverage-6-4-0
                <<: *default-step
                services:
                    - shopware-6-4-0
                name: Test coverage (6.4.0.0)
                script:
                    - bash setup-vendor.sh
                    - . ./bitbucket-pipelines.env
                    - XDEBUG_MODE=coverage COMPOSER_EXTRA_ARGS=-vvv make -e coverage
        -   step: &test-coverage-6-4-5
                <<: *test-coverage-6-4-0
                services:
                    - shopware-6-4-5
                name: Test coverage (6.4.5.0)
        -   step: &test-coverage-6-4-10
                <<: *test-coverage-6-4-0
                services:
                    - shopware-6-4-10
                name: Test coverage (6.4.10.0)
        -   step: &test-coverage-6-4-15
                <<: *test-coverage-6-4-0
                services:
                    - shopware-6-4-15
                name: Test coverage (6.4.15.0)
        -   step: &test-coverage-6-4-20
                <<: *test-coverage-6-4-0
                services:
                    - shopware-6-4-20
                name: Test coverage (6.4.20.0)
        -   step: &test-coverage-6-5-0
                <<: *test-coverage-6-4-0
                services:
                    - shopware-6-5-0
                name: Test coverage (6.5.0.0)
        -   step: &test-code-style-php
                <<: *default-step
                name: ECS (Code style)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-php
        -   step: &test-code-style-phpstan
                <<: *default-step
                name: PHPStan (Static code analysis)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-phpstan
        -   step: &test-code-style-psalm
                <<: *default-step
                name: Psalm (Static code analysis)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-psalm
        -   step: &test-code-style-phpmd
                <<: *default-step
                name: PHP Mess Detector (Static code analysis)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-phpmd
        -   step: &test-code-style-phpcpd
                <<: *default-step
                name: PHP Copy Paste Detector (Static code analysis)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-phpcpd
        -   step: &test-code-style-soft-require
                <<: *default-step
                name: Composer soft requirements (Requirement analysis)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-soft-require
        -   step: &test-code-style-composer-unused
                <<: *default-step
                name: Composer unused (Requirement analysis)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-composer-unused
        -   step: &test-code-style-composer-normalize
                <<: *default-step
                name: composer.json (Code style)
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-composer-normalize
        -   step: &test-code-style-json
                <<: *default-step
                name: '*.json (Code style)'
                script:
                    - bash setup-vendor.sh
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-json
        -   step: &test-infection
                <<: *default-step
                name: Test infection
                services:
                    - shopware-6-4-20
                script:
                    - bash setup-vendor.sh
                    - . ./bitbucket-pipelines.env
                    - COMPOSER_EXTRA_ARGS=-vvv make -e infection

pipelines:
    branches:
        master:
            -   step: *github-keyword-gate-step
            -   step: *github-mirror-branch
            -   step: *composer-high-install
            -   parallel: &steps-blocking-tests-api
                    -   step: *test-coverage-6-4-0
                    -   step: *test-coverage-6-4-5
                    -   step: *test-coverage-6-4-10
                    -   step: *test-coverage-6-4-15
                    -   step: *test-coverage-6-4-20
                    -   step: *test-coverage-6-5-0
            -   parallel: &steps-blocking-tests-static
                    -   step: *test-code-style-composer-normalize
                    -   step: *test-code-style-composer-unused
                    -   step: *test-code-style-json
                    -   step: *test-code-style-php
                    -   step: *test-code-style-phpcpd
            -   step: *composer-low-install
            -   parallel: &steps-blocking-low-tests-api
                    -   step: *test-coverage-6-4-0
                    -   step: *test-coverage-6-4-5
                    -   step: *test-coverage-6-4-10
                    -   step: *test-coverage-6-4-15
                    -   step: *test-coverage-6-4-20
                    -   step: *test-coverage-6-5-0
            -   parallel: &steps-blocking-low-static
                    -   step: *test-code-style-composer-unused
            -   parallel: &steps-blocking-non-min-php-version-tests
                    -   step: *test-unit-high-install-80
                    -   step: *test-unit-low-install-80
                    -   step: *test-unit-high-install-81
                    -   step: *test-unit-low-install-81
            -   step: *composer-high-install
            -   parallel: &steps-non-blocking-tests
                    -   step: *test-code-style-phpmd
                    -   step: *test-code-style-soft-require
                    -   step: *test-code-style-phpstan
                    -   step: *test-code-style-psalm
                    -   step: *test-infection
            -   step: *composer-low-install
            -   parallel: &steps-non-blocking-low-tests
                    -   step: *test-code-style-phpstan
                    -   step: *test-code-style-psalm
        '*.*.x':
            -   step: *github-keyword-gate-step
            -   step: *github-mirror-branch

    tags:
        '*':
            -   step: *github-keyword-gate-step
            -   step: *github-mirror-tag

    default:
        -   step: *composer-high-install
        -   parallel: *steps-blocking-tests-api
        -   parallel: *steps-blocking-tests-static
        -   step: *composer-low-install
        -   parallel: *steps-blocking-low-tests-api
        -   parallel: *steps-blocking-low-static
        -   parallel: *steps-blocking-non-min-php-version-tests
        -   step: *composer-high-install
        -   parallel: *steps-non-blocking-tests
        -   step: *composer-low-install
        -   parallel: *steps-non-blocking-low-tests
